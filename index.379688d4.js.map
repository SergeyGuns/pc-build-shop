{"mappings":"ACAC,CAAA,KAEG,IAAM,EAAM,SAAS,aAAa,CAAC,qBACnC,GAAI,AAAQ,OAAR,EAAc,OAClB,IAAM,EAAM,EAAI,UAAU,CAAC,MAG3B,SAAS,IACP,EAAI,KAAK,CAAI,IACb,EAAI,MAAM,CAAG,GACf,CALA,EAAI,KAAK,CAAC,KAAK,CAAG,OAClB,EAAI,KAAK,CAAC,MAAM,CAAG,OAKnB,IAMA,IAAM,EAhBY,CAAE,oBAAqB,qBAAqB,CAiB1D,EAAsB,EAYtB,EAAU,EAAI,KAAK,CAAI,EACvB,EAAU,EAAI,MAAM,CAAG,GAuC3B,AALA,SAAS,IACP,EAAI,KAAK,EAAI,EACb,AA/CF,WACE,IAAK,IAAI,EAAI,EAAG,EARQ,EAQW,IAAK,CACtC,IAAI,EAAS,AARS,EAQT,EAPS,IAQlB,EAAc,AAPI,GAOJ,EAAiB,KAAK,EAAE,CAAG,IAC7C,AAYJ,CAAA,SAAkB,CAAM,CAAE,CAAK,CAAE,CAAW,EAC1C,EAAI,WAAW,CAAG,EAClB,EAAI,SAAS,CAAK,EAElB,EAAI,SAAS,GAEb,IAAK,IAAI,EAAI,KAAM,EAAI,IAAK,IAAK,CAC/B,IAAI,EAAgB,AAAC,CAAA,EAAI,CAAA,EAAc,KAAK,EAAE,CAAG,IAC7C,EAAgB,EAChB,EAAM,KAAK,GAAG,CAAC,GAEf,EAAM,IACR,CAAA,EAAgB,AAAA,CAAA,EAAM,EAAA,EAAM,EAD9B,EAII,GAAgB,GAClB,CAAA,EAAe,CAAA,EAGjB,IAAI,EAAgB,EAAS,EAAe,KAAK,GAAG,CAAC,AAAC,CAAA,EAAe,CAAA,EArB/C,GADA,GAuBlB,EAAI,EAAU,KAAK,GAAG,CAAC,GAAgB,EACvC,EAAI,EAAU,KAAK,GAAG,CAAC,GAAgB,CAC3C,CAAA,EAAI,KAAM,EAAI,MAAM,CAAC,EAAG,GAAK,EAAI,MAAM,CAAC,EAAG,EAE7C,CACA,EAAI,SAAS,GACb,EAAI,MAAM,EACZ,CAAA,EAvCa,EAAQ,CAAM,CAAC,EAAE,CAAE,EAC9B,CAEA,GAAc,IAAK,EAAa,EAAI,GACtC,IAwCE,sBAAsB,EACxB,IAGA,OAAO,gBAAgB,CAAC,SAAU,EAEpC,CAAA,G,4D","sources":["<anon>","src/js/circle-animation.js"],"sourcesContent":["(()=>{\n    const MAIN_COLORS = [\n        \"rgba(255,231,1,1)\",\n        \"rgba(154,21,236,1)\"\n    ];\n    const cnv = document.querySelector(`.circle-animation`);\n    if (cnv === null) return;\n    const ctx = cnv.getContext(`2d`);\n    cnv.style.width = \"100%\";\n    cnv.style.height = \"100%\";\n    function init() {\n        cnv.width = 640;\n        cnv.height = 640;\n    }\n    init();\n    const numberOfRings = 2;\n    const ringRadiusOffset = 7;\n    const ringRadius = 200;\n    const waveOffset = 15;\n    const colors = MAIN_COLORS;\n    let startAngle = 0;\n    function updateRings() {\n        for(let i = 0; i < numberOfRings; i++){\n            let radius = i * ringRadiusOffset + ringRadius;\n            let offsetAngle = i * waveOffset * Math.PI / 180;\n            drawRing(radius, colors[i], offsetAngle);\n        }\n        startAngle >= 360 ? startAngle = 0 : startAngle++;\n    }\n    let centerX = cnv.width / 2;\n    let centerY = cnv.height / 2;\n    const maxWavesAmplitude = 17;\n    const numberOfWaves = 2;\n    function drawRing(radius, color, offsetAngle) {\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 9;\n        ctx.beginPath();\n        for(let j = -180; j < 180; j++){\n            let currentAngle = (j + startAngle) * Math.PI / 180;\n            let displacement = 0;\n            let now = Math.abs(j);\n            if (now > 70) displacement = (now - 70) / 70;\n            if (displacement >= 1) displacement = 1;\n            let waveAmplitude = radius + displacement * Math.sin((currentAngle + offsetAngle) * numberOfWaves) * maxWavesAmplitude;\n            let x = centerX + Math.cos(currentAngle) * waveAmplitude;\n            let y = centerY + Math.sin(currentAngle) * waveAmplitude;\n            j > -180 ? ctx.lineTo(x, y) : ctx.moveTo(x, y);\n        }\n        ctx.closePath();\n        ctx.stroke();\n    }\n    function loop() {\n        cnv.width |= 0; // ctx.clearRect(0, 0, cnv.width, cnv.height);\n        updateRings();\n        requestAnimationFrame(loop);\n    }\n    loop();\n    window.addEventListener(`resize`, init);\n})();\n\n//# sourceMappingURL=index.379688d4.js.map\n","(() => {\r\n  const MAIN_COLORS = [ 'rgba(255,231,1,1)', 'rgba(154,21,236,1)']\r\n    const cnv = document.querySelector(`.circle-animation`);\r\n    if (cnv === null) return;\r\n    const ctx = cnv.getContext(`2d`);\r\n    cnv.style.width = '100%'\r\n    cnv.style.height = '100%'\r\n    function init() {\r\n      cnv.width  = 640;\r\n      cnv.height = 640;\r\n    }\r\n    init();\r\n  \r\n    const numberOfRings     = 2;\r\n    const ringRadiusOffset  = 7;\r\n    const ringRadius        = 200;\r\n    const waveOffset        = 15;\r\n    const colors            = MAIN_COLORS;\r\n    let startAngle          = 0;\r\n  \r\n    function updateRings() {\r\n      for (let i = 0; i < numberOfRings; i++) {\r\n        let radius = i * ringRadiusOffset + ringRadius;\r\n        let offsetAngle = i * waveOffset * Math.PI / 180;\r\n        drawRing(radius, colors[i], offsetAngle);\r\n      }\r\n  \r\n      startAngle >= 360? startAngle = 0 : startAngle++;\r\n    }\r\n  \r\n    let centerX = cnv.width  / 2;\r\n    let centerY = cnv.height / 2;\r\n  \r\n    const maxWavesAmplitude = 17;\r\n    const numberOfWaves     = 2;\r\n  \r\n    function drawRing(radius, color, offsetAngle) {\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth   = 9;\r\n  \r\n      ctx.beginPath();\r\n      \r\n      for (let j = -180; j < 180; j++) {\r\n        let currentAngle  = (j + startAngle) * Math.PI / 180;\r\n        let displacement  = 0;\r\n        let now = Math.abs(j);\r\n  \r\n        if (now > 70) {\r\n          displacement = (now - 70) / 70;\r\n        }\r\n  \r\n        if (displacement >= 1) {\r\n          displacement = 1;\r\n        }\r\n  \r\n        let waveAmplitude = radius + displacement * Math.sin((currentAngle + offsetAngle) * numberOfWaves) * maxWavesAmplitude;\r\n        let x = centerX + Math.cos(currentAngle) * waveAmplitude;\r\n        let y = centerY + Math.sin(currentAngle) * waveAmplitude;\r\n        j > -180? ctx.lineTo(x, y) : ctx.moveTo(x, y);\r\n  \r\n      }\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n    }\r\n  \r\n    function loop() {\r\n      cnv.width |= 0; // ctx.clearRect(0, 0, cnv.width, cnv.height);\r\n      updateRings();\r\n      requestAnimationFrame(loop);\r\n    }\r\n    loop();\r\n  \r\n    window.addEventListener(`resize`, init);\r\n  \r\n  })();"],"names":["cnv","document","querySelector","ctx","getContext","init","width","height","style","colors","startAngle","centerX","centerY","loop","updateRings","i","radius","offsetAngle","Math","PI","drawRing","color","strokeStyle","lineWidth","beginPath","j","currentAngle","displacement","now","abs","waveAmplitude","sin","x","cos","y","lineTo","moveTo","closePath","stroke","requestAnimationFrame","window","addEventListener"],"version":3,"file":"index.379688d4.js.map"}