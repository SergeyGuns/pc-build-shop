{"mappings":"AAAC,CAAA;IACC,MAAM,cAAc;QAAE;QAAqB;KAAqB;IAC9D,MAAM,MAAM,SAAS,aAAa,CAAC,CAAC,iBAAiB,CAAC;IACtD,IAAI,QAAQ,MAAM;IAClB,MAAM,MAAM,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC;IAC/B,IAAI,KAAK,CAAC,KAAK,GAAG;IAClB,IAAI,KAAK,CAAC,MAAM,GAAG;IACnB,SAAS;QACP,IAAI,KAAK,GAAI;QACb,IAAI,MAAM,GAAG;IACf;IACA;IAEA,MAAM,gBAAoB;IAC1B,MAAM,mBAAoB;IAC1B,MAAM,aAAoB;IAC1B,MAAM,aAAoB;IAC1B,MAAM,SAAoB;IAC1B,IAAI,aAAsB;IAE1B,SAAS;QACP,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,IAAK;YACtC,IAAI,SAAS,IAAI,mBAAmB;YACpC,IAAI,cAAc,IAAI,aAAa,KAAK,EAAE,GAAG;YAC7C,SAAS,QAAQ,MAAM,CAAC,EAAE,EAAE;QAC9B;QAEA,cAAc,MAAK,aAAa,IAAI;IACtC;IAEA,IAAI,UAAU,IAAI,KAAK,GAAI;IAC3B,IAAI,UAAU,IAAI,MAAM,GAAG;IAE3B,MAAM,oBAAoB;IAC1B,MAAM,gBAAoB;IAE1B,SAAS,SAAS,MAAM,EAAE,KAAK,EAAE,WAAW;QAC1C,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,GAAK;QAElB,IAAI,SAAS;QAEb,IAAK,IAAI,IAAI,MAAM,IAAI,KAAK,IAAK;YAC/B,IAAI,eAAgB,AAAC,CAAA,IAAI,UAAS,IAAK,KAAK,EAAE,GAAG;YACjD,IAAI,eAAgB;YACpB,IAAI,MAAM,KAAK,GAAG,CAAC;YAEnB,IAAI,MAAM,IACR,eAAe,AAAC,CAAA,MAAM,EAAC,IAAK;YAG9B,IAAI,gBAAgB,GAClB,eAAe;YAGjB,IAAI,gBAAgB,SAAS,eAAe,KAAK,GAAG,CAAC,AAAC,CAAA,eAAe,WAAU,IAAK,iBAAiB;YACrG,IAAI,IAAI,UAAU,KAAK,GAAG,CAAC,gBAAgB;YAC3C,IAAI,IAAI,UAAU,KAAK,GAAG,CAAC,gBAAgB;YAC3C,IAAI,OAAM,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI,MAAM,CAAC,GAAG;QAE7C;QACA,IAAI,SAAS;QACb,IAAI,MAAM;IACZ;IAEA,SAAS;QACP,IAAI,KAAK,IAAI,GAAG,8CAA8C;QAC9D;QACA,sBAAsB;IACxB;IACA;IAEA,OAAO,gBAAgB,CAAC,CAAC,MAAM,CAAC,EAAE;AAEpC,CAAA","sources":["src/js/circle-animation.js"],"sourcesContent":["(() => {\r\n  const MAIN_COLORS = [ 'rgba(255,231,1,1)', 'rgba(154,21,236,1)']\r\n    const cnv = document.querySelector(`.circle-animation`);\r\n    if (cnv === null) return;\r\n    const ctx = cnv.getContext(`2d`);\r\n    cnv.style.width = '100%'\r\n    cnv.style.height = '100%'\r\n    function init() {\r\n      cnv.width  = 640;\r\n      cnv.height = 640;\r\n    }\r\n    init();\r\n  \r\n    const numberOfRings     = 2;\r\n    const ringRadiusOffset  = 7;\r\n    const ringRadius        = 200;\r\n    const waveOffset        = 15;\r\n    const colors            = MAIN_COLORS;\r\n    let startAngle          = 0;\r\n  \r\n    function updateRings() {\r\n      for (let i = 0; i < numberOfRings; i++) {\r\n        let radius = i * ringRadiusOffset + ringRadius;\r\n        let offsetAngle = i * waveOffset * Math.PI / 180;\r\n        drawRing(radius, colors[i], offsetAngle);\r\n      }\r\n  \r\n      startAngle >= 360? startAngle = 0 : startAngle++;\r\n    }\r\n  \r\n    let centerX = cnv.width  / 2;\r\n    let centerY = cnv.height / 2;\r\n  \r\n    const maxWavesAmplitude = 17;\r\n    const numberOfWaves     = 2;\r\n  \r\n    function drawRing(radius, color, offsetAngle) {\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth   = 9;\r\n  \r\n      ctx.beginPath();\r\n      \r\n      for (let j = -180; j < 180; j++) {\r\n        let currentAngle  = (j + startAngle) * Math.PI / 180;\r\n        let displacement  = 0;\r\n        let now = Math.abs(j);\r\n  \r\n        if (now > 70) {\r\n          displacement = (now - 70) / 70;\r\n        }\r\n  \r\n        if (displacement >= 1) {\r\n          displacement = 1;\r\n        }\r\n  \r\n        let waveAmplitude = radius + displacement * Math.sin((currentAngle + offsetAngle) * numberOfWaves) * maxWavesAmplitude;\r\n        let x = centerX + Math.cos(currentAngle) * waveAmplitude;\r\n        let y = centerY + Math.sin(currentAngle) * waveAmplitude;\r\n        j > -180? ctx.lineTo(x, y) : ctx.moveTo(x, y);\r\n  \r\n      }\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n    }\r\n  \r\n    function loop() {\r\n      cnv.width |= 0; // ctx.clearRect(0, 0, cnv.width, cnv.height);\r\n      updateRings();\r\n      requestAnimationFrame(loop);\r\n    }\r\n    loop();\r\n  \r\n    window.addEventListener(`resize`, init);\r\n  \r\n  })();"],"names":[],"version":3,"file":"index.5cdbb0df.js.map","sourceRoot":"/__parcel_source_root/"}