{"mappings":"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","sources":["src/js/corousel.js"],"sourcesContent":[";(async ()=>{\r\n    let xPercent = 100;\r\n    const cnv = document.querySelector('.corousel')\r\n    if (cnv === null) return;\r\n    const ctx = cnv.getContext('2d')\r\n    const throttle = (callee, timeout) => {\r\n        // Таймер будет определять,\r\n        // надо ли нам пропускать текущий вызов.\r\n        let timer = null\r\n      \r\n        // Как результат возвращаем другую функцию.\r\n        // Это нужно, чтобы мы могли не менять другие части кода,\r\n        // чуть позже мы увидим, как это помогает.\r\n        return function perform(...args) {\r\n          // Если таймер есть, то функция уже была вызвана,\r\n          // и значит новый вызов следует пропустить.\r\n          if (timer) return\r\n      \r\n          // Если таймера нет, значит мы можем вызвать функцию:\r\n          timer = setTimeout(() => {\r\n            // Аргументы передаём неизменными в функцию-аргумент:\r\n            callee(...args)\r\n      \r\n            // По окончании очищаем таймер:\r\n            clearTimeout(timer)\r\n            timer = null\r\n          }, timeout)\r\n        }\r\n    }\r\n    let images = [].map.call(document.querySelector('.preload-images').querySelectorAll('img'), (el)=>el.src);\r\n    let drawImageIndex = 0;\r\n    let scale = 1;\r\n    const throttledDraw = throttle(()=> {\r\n        requestAnimationFrame(()=>{\r\n            const rect = cnv.getBoundingClientRect(); \r\n            xPercentCurr = parseInt(rect.bottom / (window.innerHeight + 400) * 100);\r\n            xPercentCurr > 99 && (xPercentCurr = 99);\r\n            xPercentCurr < 0 && (xPercentCurr = 0);\r\n            if(xPercent === xPercentCurr) return;\r\n            xPercent = xPercentCurr\r\n            const currDraw = Math.floor(images.length / 100 * xPercent)\r\n            drawImageIndex = currDraw\r\n            scale = 1\r\n            if( scale < 1){ scale = 1}\r\n        })}, 100)\r\n\r\n    document.addEventListener('scroll', throttledDraw);\r\n    \r\n    \r\n    \r\n    \r\n    const loadedImages = await Promise.all(images.map(url=> {\r\n        return new Promise(resolve => {\r\n            const img = new Image(); \r\n            img.addEventListener(\"load\",()=>{\r\n                resolve(img)\r\n            },false,);\r\n            img.src = url;\r\n        })\r\n    })).then(images => {\r\n        return images.map(img => {\r\n            const cnv = document.createElement('canvas')\r\n            cnv.width = 1920;\r\n            cnv.height = 1038;\r\n            const ctx = cnv.getContext('2d')\r\n            ctx.drawImage(img,0,0)\r\n            const imgData = ctx.getImageData(0, 0, 1920, 1038)\r\n            const data = imgData.data\r\n            for (let i = 0; i < data.length; i += 4) {\r\n                const red = data[i];\r\n                const green = data[i + 1];\r\n                const blue = data[i + 2];\r\n                const alpha = data[i + 3];\r\n              \r\n                if (red > 240 && green > 240 && blue > 240) {\r\n                  data[i] = 0;\r\n                  data[i + 1] = 0;\r\n                  data[i + 2] = 0;\r\n                  data[i + 3] = 1\r\n                }\r\n                if (red > 200 && green > 200 && blue > 200) {\r\n                    data[i] = 0;\r\n                    data[i + 1] = 0;\r\n                    data[i + 2] = 0;\r\n                    data[i + 3] = 0.5\r\n                  }\r\n              }\r\n              var img = new Image;\r\n            return imgData\r\n        })\r\n    })\r\n\r\n    function loop () {\r\n        ctx.putImageData(loadedImages[drawImageIndex], 0, 0)\r\n        cnv.style.transform = `scale(${scale})`\r\n        window.requestAnimationFrame(loop);\r\n    }\r\n    loop()\r\n})();;"],"names":[],"version":3,"file":"index.14eab4da.js.map","sourceRoot":"/__parcel_source_root/"}